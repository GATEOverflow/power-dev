name: Check Python for ptd_client_server
on:
  push:
    paths:
    - 'ptd_client_server/**'
    - '.github/workflows/python_ptd_client_server.yaml'
  pull_request:
    paths:
    - 'ptd_client_server/**'
    - '.github/workflows/python_ptd_client_server.yaml'
jobs:
  check:
    name: Check Python
    runs-on: "${{ matrix.on }}"
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.7, 3.8, 3.9]
        on: [ubuntu-latest, windows-latest]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install CI dependencies
      run: |
        python -m pip install --upgrade pip
        pip install black flake8 mypy==0.790 psutil pytest

    - name: Lint with flake8
      shell: bash
      run: |
        ./ptd_client_server/ci.sh flake8

    - name: Check code formatting with black
      shell: bash
      run: |
        ./ptd_client_server/ci.sh black

    - name: Check typing with mypy
      shell: bash
      run: |
        ./ptd_client_server/ci.sh mypy

    - name: Run unit tests wit pytest
      shell: bash
      run: |
        ./ptd_client_server/ci.sh pytest
  cm_check:
    name: Check power workflow
    runs-on: "${{ matrix.on }}"
    strategy:
      fail-fast: false
      matrix:
        python-version: [ 3.9 ]
        on: [ubuntu-latest]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python3 -m pip install --upgrade pip
        python3 -m pip install cmind
        cm pull repo mlcommons@ck
        cm run script --quiet --tags=get,sys-utils-cm
    - name: Test git clone
      run: |
        cm run script --tags=get,github,cli --quiet
        echo ${{ secrets.USER_TOKEN }} | gh auth login --with-token
    - name: Start power server
      run: |
        echo ${{ secrets.USER_TOKEN }} | gh auth login --with-token
        cm run script --tags=run,docker,container --cm_repo=ctuning@mlcommons-ck --gh_token=${{ secrets.USER_TOKEN }} --docker_os=ubuntu --docker_os_version=22.04  --port_maps,=4951:4950 --run_cmd="cm run script --tags=run,mlperf,power,server --device_type=0 --screen=yes --quiet"
    - name: Start power server2
      run: |
        echo ${{ secrets.USER_TOKEN }} | gh auth login --with-token
        cm run script --tags=run,mlperf,power,server --device_type=0 --screen=yes --quiet --env.CM_GH_TOKEN=${{ secrets.USER_TOKEN }}

    - name: Test CM Script for MLPerf Inference ResNet50 with power
      run: |
        cm run script --tags=run,mlperf,inference,generate-run-cmds,_submission,_short --submitter="cTuning" --model=resnet50 --backend=onnxruntime --device=cpu --scenario=Offline --test_query_count=5 --precision=fp32 --quiet --power=yes


