name: Check Python for ptd_client_server
on:
  push:
    paths:
    - 'ptd_client_server/**'
    - '.github/workflows/python_ptd_client_server.yaml'
  pull_request:
    paths:
    - 'ptd_client_server/**'
    - '.github/workflows/python_ptd_client_server.yaml'
jobs:
  check:
    name: Check Python
    runs-on: "${{ matrix.on }}"
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.7, 3.8, 3.9]
        on: [ubuntu-latest, windows-latest]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install CI dependencies
      run: |
        python -m pip install --upgrade pip
        pip install black flake8 mypy==0.790 psutil pytest

    - name: Lint with flake8
      shell: bash
      run: |
        ./ptd_client_server/ci.sh flake8

    - name: Check code formatting with black
      shell: bash
      run: |
        ./ptd_client_server/ci.sh black

    - name: Check typing with mypy
      shell: bash
      run: |
        ./ptd_client_server/ci.sh mypy

    - name: Run unit tests wit pytest
      shell: bash
      run: |
        ./ptd_client_server/ci.sh pytest
  cm_check:
    name: Check power workflow
    runs-on: "${{ matrix.on }}"
    strategy:
      fail-fast: false
      matrix:
        python-version: [ 3.9 ]
        on: [ubuntu-latest]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
        token: ${{ secrets.USER_TOKEN }}
        GITHUB_TOKEN: ${{ secrets.USER_TOKEN }}
        GH_TOKEN: ${{ secrets.USER_TOKEN }}
        FIRST_NAME: Mona
        LAST_NAME: Octocat
        repository: 'power'
    - name: Install dependencies
      run: |
        python3 -m pip install --upgrade pip
        python3 -m pip install cmind
        echo ${{ secrets.ACCESS_TOKEN }}
        echo ${{ secrets.USER_TOKEN }}
        cm pull repo mlcommons@ck
        cm run script --quiet --tags=get,sys-utils-cm
    - name: Test git clone
      run: |
        git config --global user.name "arjunsuresh"
        git config --global user.email "arjunsuresh1987@gmail.com"
        git config -l
        git --version
        git config --global credential.helper cache
        cm run script --tags=get,github,cli --quiet
        gh repo clone https://github.com/mlcommons/power
    - name: Test CM Script for MLPerf Inference ResNet50 with power
      run: |
        git clone https://github.com/mlcommons/power
   
        cm run script --tags=run,mlperf,power,server  --screen=yes  --device_type=0 --quiet
        cm run script --tags=run,mlperf,inference,generate-run-cmds,_submission,_short --submitter="cTuning" --model=resnet50 --backend=${{ matrix.backend }} --device=cpu --scenario=Offline --test_query_count=5 --precision=fp32 --quiet --power=yes --adr.mlperf-power-client.power_server=localhost


